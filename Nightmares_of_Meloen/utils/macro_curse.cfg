#textdomain wesnoth-Nightmares_of_Meloen

#define MACRO_OBJECT_DECREASE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will increase the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=false
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_OBJECT_REPLACE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will replace the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=true
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_MEMO_DEFENSE UNIT TERRAIN
    [store_unit]
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        variable=unit_memo_def
    [/store_unit]
    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            equals=""
        [/variable]
        [then]
            # Missing defense is 0% in the engine
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=100
            [/set_variable]
        [/then]
        [else]
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=${UNIT}.defense.{TERRAIN}
            [/set_variable]
        [/else]
    [/if]
    [unstore_unit]
        variable=unit_memo_def
    [/unstore_unit]
    {CLEAR_VARIABLE unit_memo_def}
#enddef

#define MACRO_DECREASE_DEFENSE UNIT TERRAIN AMOUNT MAX_DEF
    # it is necessary each time to check if the defense becomes greater than 100 or the game may crash
    [set_variable]
        name=limit_for_addition
        value={MAX_DEF}
    [/set_variable]
    [set_variable]
        name=limit_for_addition
        add=-{AMOUNT}
    [/set_variable]

    {MACRO_MEMO_DEFENSE ({UNIT}) ({TERRAIN})}

    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            less_than=$limit_for_addition
        [/variable]
        [then]
            [if]
                [variable]
                    name={UNIT}.defense.{TERRAIN}
                    less_than=0
                [/variable]
                [then]
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) (-{AMOUNT})}
                [/then]
                [else]
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) ({AMOUNT})}
                [/else]
            [/if]
        [/then]
        [else]
            {MACRO_OBJECT_REPLACE_DEFENSE ({UNIT}) ({TERRAIN}) ({MAX_DEF})}
        [/else]
    [/if]

    {CLEAR_VARIABLE limit_for_addition}
#enddef

#define MACRO_CURSE UNIT AMOUNT MAX_DEF STATUS_IMAGE
    # Will decrease the defense of a given unit to a given amount,
    # on all terrains and to a minimum of (100-MAX_DEF)%

    {MACRO_DECREASE_DEFENSE ({UNIT}) deep_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) shallow_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) reef ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) swamp_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) flat ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) sand ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) forest ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) hills ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) mountains ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) village ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) castle ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) cave ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) frozen ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) unwalkable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) impassable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) fungus ({AMOUNT}) {MAX_DEF}}

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [modify_unit]
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [event]
                    name=prerecall
                    id=uncurse on recall
                    first_time_only=no

                    [filter]
                        [filter_wml]
                            [status]
                                cursed=yes
                            [/status]
                        [/filter_wml]
                    [/filter]
                    [modify_unit]
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                                [defense]
                                        castle=$|this_unit.variables.memo_def.castle
                                        cave=$|this_unit.variables.memo_def.cave
                                        deep_water=$|this_unit.variables.memo_def.deep_water
                                        flat=$|this_unit.variables.memo_def.flat
                                        forest=$|this_unit.variables.memo_def.forest
                                        frozen=$|this_unit.variables.memo_def.frozen
                                        fungus=$|this_unit.variables.memo_def.fungus
                                        hills=$|this_unit.variables.memo_def.hills
                                        mountains=$|this_unit.variables.memo_def.mountains
                                        reef=$|this_unit.variables.memo_def.reef
                                        sand=$|this_unit.variables.memo_def.sand
                                        shallow_water=$|this_unit.variables.memo_def.shallow_water
                                        swamp_water=$|this_unit.variables.memo_def.swamp_water
                                        unwalkable=$|this_unit.variables.memo_def.unwalkable
                                        village=$|this_unit.variables.memo_def.village
                                [/defense]
                    [/modify_unit]

                    [remove_unit_overlay]
                        x,y=$|x1,$|y1
                        image="utils/curse.png"
                    [/remove_unit_overlay]

                    [object]
                        silent="yes"
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                        [effect]
                            apply_to=status
                            remove=cursed
                        [/effect]
                    [/object]
                [/event]
            [/modify_unit]
        [/then]
        [else]
            [modify_unit]
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [event]
                    name=prerecall
                    id=uncurse on recall
                    first_time_only=no

                    [filter]
                        [filter_wml]
                            [status]
                                cursed=yes
                            [/status]
                        [/filter_wml]
                    [/filter]

                    [modify_unit]
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                                [defense]
                                        castle=$|this_unit.variables.memo_def.castle
                                        cave=$|this_unit.variables.memo_def.cave
                                        deep_water=$|this_unit.variables.memo_def.deep_water
                                        flat=$|this_unit.variables.memo_def.flat
                                        forest=$|this_unit.variables.memo_def.forest
                                        frozen=$|this_unit.variables.memo_def.frozen
                                        fungus=$|this_unit.variables.memo_def.fungus
                                        hills=$|this_unit.variables.memo_def.hills
                                        mountains=$|this_unit.variables.memo_def.mountains
                                        reef=$|this_unit.variables.memo_def.reef
                                        sand=$|this_unit.variables.memo_def.sand
                                        shallow_water=$|this_unit.variables.memo_def.shallow_water
                                        swamp_water=$|this_unit.variables.memo_def.swamp_water
                                        unwalkable=$|this_unit.variables.memo_def.unwalkable
                                        village=$|this_unit.variables.memo_def.village
                                [/defense]
                    [/modify_unit]

            [object]
                silent="yes"
                [filter]
                    x,y=$|x1,$|y1
                [/filter]
                [effect]
                    apply_to=status
                    remove=cursed
                [/effect]
            [/object]
        [/event]
    [/modify_unit]
        [/else]
    [/if]

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [unit_overlay]
                x,y=${UNIT}.x,${UNIT}.y
                image="utils/curse.png"
            [/unit_overlay]
        [/then]
    [/if]

    [object]
        silent="yes"
        [filter]
            x,y=${UNIT}.x,${UNIT}.y
        [/filter]
        [effect]
            apply_to=status
            add=cursed
        [/effect]
    [/object]
#enddef

#define MACRO_UNCURSE UNIT STATUS_IMAGE
    # Gets the defense of a given unit back to before it was cursed

    [set_variable]
        name={UNIT}.defense.deep_water
        value=${UNIT}.variables.memo_def.deep_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.shallow_water
        value=${UNIT}.variables.memo_def.shallow_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.reef
        value=${UNIT}.variables.memo_def.reef
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.swamp_water
        value=${UNIT}.variables.memo_def.swamp_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.flat
        value=${UNIT}.variables.memo_def.flat
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.sand
        value=${UNIT}.variables.memo_def.sand
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.forest
        value=${UNIT}.variables.memo_def.forest
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.hills
        value=${UNIT}.variables.memo_def.hills
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.mountains
        value=${UNIT}.variables.memo_def.mountains
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.village
        value=${UNIT}.variables.memo_def.village
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.castle
        value=${UNIT}.variables.memo_def.castle
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.cave
        value=${UNIT}.variables.memo_def.cave
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.frozen
        value=${UNIT}.variables.memo_def.frozen
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.unwalkable
        value=${UNIT}.variables.memo_def.unwalkable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.impassable
        value=${UNIT}.variables.memo_def.impassable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.fungus
        value=${UNIT}.variables.memo_def.fungus
    [/set_variable]

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [unstore_unit]
                variable={UNIT}
            [/unstore_unit]

            [remove_unit_overlay]
                x,y=${UNIT}.x,${UNIT}.y
                image="utils/curse.png"
            [/remove_unit_overlay]

            [object]
                silent="yes"
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [effect]
                    apply_to=status
                    remove=cursed
                [/effect]
            [/object]
        [/then]
    [/if]
#enddef
